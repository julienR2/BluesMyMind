#!/usr/bin/perl

use File::Path;

my $PREFIX  = '@BASEPATH@';


if (0) {

my %ps = map { /^\s*(\d+)\s+(.*)/ } `ps -a -opid,ppid,command -ww`;
my($ppid) = $ps{$$} =~ /^(\d+)/;
my($pcmd) = $ps{$ppid} =~ /^\d+\s+(.*)/;
my @dpkg_args = split /\s+/, $pcmd;

print "$pcmd\n", map "\t'$_'\n", @dpkg_args;

my($package, $dpkg_script, $dpkg_mode);
while (defined ($package = shift @dpkg_args)) {
    print "trying $package...\n";
    if ($package =~ s,$PREFIX/var/lib/dpkg/info/(\S+)\.((?:pre|post)(?:inst|rm)),$1,) {
	$dpkg_script = $2;
	$dpkg_mode = shift @dpkg_args;
	last;
    }
}
if (not defined $dpkg_mode) {
	die "Could not parse \"$pcmd\"\n";
}

my $fink_type = shift;

print "dpkg script: $dpkg_script\n";
print "dpkg mode  : $dpkg_mode\n";
print "dpkg args  : @dpkg_args\n";

print "fink script: $fink_type\n";
print "fink args  : @ARGV\n";

}

die "usage: $0 <command> <target> [command options]\n" unless (@ARGV >= 2);

my $COMMAND = lc(shift);
my $TARGET  = lc(shift);
my $DEBUG   = 0;

my $handled = 0;

$DEBUG && debug("command = $COMMAND, target = $TARGET, arguments = '@ARGV'");

if ($TARGET eq "updatepod") {
	my $perldirectory = shift;
	my $perlarchdir   = shift;

	my $perllocaldir = $PREFIX . '/lib/perl5' . $perldirectory . '/' . $perlarchdir;
	debug("making $perllocaldir directory");
	mkpath($perllocaldir);

	if ($COMMAND eq "postinst") {
		my $podfiledir = $PREFIX . '/share/podfiles' . $perldirectory;

		debug("opening $perllocaldir/perllocal.pod for writing");
		if (open(FILEOUT, '>' . $perllocaldir . '/perllocal.pod')) {
			for my $file (<$podfiledir/*.pod>) {
				debug("writing $file to $perllocaldir/perllocal.pod");
				if (open (FILEIN, $file)) {
					local $/ = undef;
					print FILEOUT <FILEIN>;
					close(FILEIN);
				} else {
					warn "unable to add $file to perllocal.pod: $!\n";
				}
			}
			close(FILEOUT);
		} else {
			warn "unable to write to $perllocaldir/perllocal.pod: $!\n";
		}
		$handled++;
	} elsif ($COMMAND eq "postrm") {
		if (-e $PREFIX . '/share/podfiles' . $perldirectory) {
			debug("opening $perllocaldir/perllocal.pod for writing");
			if (open(FILEOUT, '>' . $perllocaldir . '/perllocal.pod')) {
				for my $file (<$PREFIX . '/share/podfiles' . $perldirectory . '/*.pod'>) {
					debug("writing $file to $perllocaldir/perllocal.pod");
					if (open (FILEIN, $file)) {
						local $/ = undef;
						print FILEOUT <FILEIN>;
						close (FILEIN);
					}
				}
				close (FILEOUT);
			}
		}
		$handled++;
	}
}

if (not $handled) {
	die "ERROR: unhandled command: $COMMAND $TARGET @ARGV\n";
}

sub debug {
	return unless ($DEBUG);

	print STDERR @_, "\n";
}
